[tox]
# run 'tox -e local' to skip the sage testsuite
# run 'tox -p auto' to run all of the following in parallel:
envlist = local-{macos,linux}-gurobi{801,811,900}, local-sage_testsuite
minversion = 2.0
skipsdist = false
basepython = sage-python23

[testenv]
whitelist_externals =
    sage
    env
    sed
    cp

deps = -rrequirements.txt

passenv =
    SAGE_ROOT
    SAGE_LOCAL
    HOME
    AR
    AS
    CC
    CFLAGS
    CPPFLAGS
    LD
    LDFLAGS
    LDFLAGS_LD
    CONDA_BUILD_SYSROOT

# environment will be skipped if regular expression does not match against the sys.platform string
platform = linux: linux
           macos: darwin

# create virtual environments that also have access to globally installed packages (sage)
sitepackages = true

# We set PYTHONUSERBASE to influence pip install.
# We set PYTHONPATH for the test; this ends up at the front of sys.path.
setenv =
    LC_CTYPE = "C.UTF-8"
    macos-gurobi801: ADD_PATH = /Library/gurobi801/mac64/bin
    macos-gurobi811: ADD_PATH = /Library/gurobi811/mac64/bin
    macos-gurobi900: ADD_PATH = /Library/gurobi900/mac64/bin
    local: PYTHONUSERBASE = {envdir}/user-site
    local: PYTHONPATH = {envdir}/user-site

# We install in the user scheme.
install_command = env PATH="{env:ADD_PATH:}:{env:PATH}" {basepython} -m pip install --install-option="--user" {opts} {packages}

# We use 'sage -c' so that the current dir does not get end up at the front of sys.path
commands =
    local: sage -c 'banner(); print(sys.path); load("check_testsuite.py")'
    local-sage_testsuite: - sage -c 'load("check_sage_testsuite.py")'
